{
  "hash": "7e2fd04237024e17e1f4895a530ce160",
  "result": {
    "markdown": "---\ntitle: \"Condfounding Medication Changes\"\nauthor: \"Vitaly Druker\"\ndate: \"2023-09-01\"\ndraft: true\ncategories: [R, simulation, clinical trial design]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\n```\n:::\n\n```{mermaid}\ngraph TB;\nTX(Treatment) -->|α1| A2; TX -->|α2| A3;\nA1(Baseline BP)-->|β| A2(Time 1 BP); A2-->|β|A3(Time 2 BP);\nA2-->|λ|M2;\nM1(Baseline Meds) -->|γ| M2(Meds Between\\nTime 1 & 2);\nM2-->|δ|A3; \n```\n\n::: {.cell}\n\n```{.r .cell-code}\nupdate_bp <- function(prior_bp,\n                      prior_meds,\n                      prior_med_effect,\n                      tx_effect) {\n    prior_bp +\n        prior_meds * prior_med_effect +\n        tx_effect\n}\n\n#' The `update_meds` function uses the `prior_bp` and `prior_meds` as a starting\n#' point for updating the number of meds taken. This function attempts to\n#' simulate a clinician observing a high BP and prescribing more meds to try to\n#' control it. Meds are either added or taken away from the number of prior\n#' meds. The entire function incorporates both $\\gamma$ and $\\lambda$\n#' transformations.\n#' @param prior_meds test\nupdate_meds <- function(prior_meds, prior_bp, prob_med_change = 1) {\n    med_difference <- dplyr::case_when(\n        prior_bp >= 160 ~ 1,\n        prior_bp >= 120 ~ 0,\n        prior_bp < 120 ~ -1\n    )\n\n    # allow randomness in medication change \n    # when prob_med_change = 1 then everyone changes meds according to the above\n    change_meds <- rbinom(length(prior_meds), size = 1, prob = prob_med_change)\n    prior_meds + change_meds * med_difference\n}\n\n\nsimulate_trial <- function(bl_bp_mean, bl_bp_sd,\n                           bl_meds_mean, bl_meds_sd,\n                           N.t, N.s,\n                           additional_med_effect,\n                           treatment_effect,\n                           sham_effect,\n                           effect_sd = 5,\n                           prob_med_change = 1,\n                           quietly = TRUE) {\n    N <- N.t + N.s\n    TX <- c(rep(1, N.t), rep(0, N.s))\n\n    # create baseline measurements\n    bl_bp <- rnorm(N, bl_bp_mean, bl_bp_sd)\n    bl_meds <- abs(round(rnorm(N, bl_meds_mean, bl_meds_sd)))\n\n    # calculate change from baseline to time1, time2 to time 1\n    tx_net_effect <- diff(c(0, treatment_effect))\n    sham_net_effect <- diff(c(0, sham_effect))\n\n    time1_effects <- rnorm(\n        n = N,\n        tx_net_effect[1] * TX + sham_net_effect[1] * (1-TX),\n        sd = effect_sd\n    )\n\n    # time1\n    time1_bp <- update_bp(\n        prior_bp = bl_bp,\n        prior_meds = bl_meds,\n        # meds do not effect time1 result\n        prior_med_effect = 0,\n        tx_effect = time1_effects\n    )\n    time1_meds <- update_meds(bl_meds,\n        time1_bp,\n        prob_med_change = prob_med_change\n    )\n    \n    time2_effects <- rnorm(\n        n = N,\n        tx_net_effect[2] * TX + sham_net_effect[2] * (1-TX),\n        sd = effect_sd\n    ) \n    # time2\n    time2_bp <- update_bp(\n        prior_bp = time1_bp,\n        prior_meds = time1_meds - bl_meds,\n        prior_med_effect = additional_med_effect,\n        tx_effect = time2_effects\n    )\n\n    out <- tibble::tibble(\n        patientid = 1:N,\n        TX = TX,\n        bl_bp = round(bl_bp),\n        bl_meds,\n        time1_bp = round(time1_bp),\n        time1_meds,\n        time2_bp = round(time2_bp)\n    )\n\n    out\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsim_trial <- simulate_trial(\n  bl_bp_mean = 150, bl_bp_sd = 10,\n  bl_meds_mean = 3, bl_meds_sd = 0,\n  N.t = 1e4, N.s = 1e4,\n  additional_med_effect = -5, \n  treatment_effect = c(-12, -8),\n  sham_effect = c(0,0),\n  effect_sd = 5,\n  prob_med_change = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(time1_bp ~ TX + bl_meds + bl_bp, data = sim_trial)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = time1_bp ~ TX + bl_meds + bl_bp, data = sim_trial)\n\nCoefficients:\n(Intercept)           TX      bl_meds        bl_bp  \n     0.2409     -12.0852           NA       0.9986  \n```\n:::\n\n```{.r .cell-code}\nlm(time2_bp ~ TX + bl_bp + time1_meds, data = sim_trial)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = time2_bp ~ TX + bl_bp + time1_meds, data = sim_trial)\n\nCoefficients:\n(Intercept)           TX        bl_bp   time1_meds  \n    14.0813      -6.8097       0.8646       1.6930  \n```\n:::\n\n```{.r .cell-code}\nlm(time2_bp ~ TX + time1_bp, data = sim_trial)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = time2_bp ~ TX + time1_bp, data = sim_trial)\n\nCoefficients:\n(Intercept)           TX     time1_bp  \n    14.4887       3.6828       0.8976  \n```\n:::\n\n```{.r .cell-code}\nlm(time2_bp ~ TX + time1_bp + time1_meds, data = sim_trial)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = time2_bp ~ TX + time1_bp + time1_meds, data = sim_trial)\n\nCoefficients:\n(Intercept)           TX     time1_bp   time1_meds  \n    15.4584       3.8311       0.9941      -4.8583  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_sim_trial <- sim_trial |>\n  select(TX, patientid, ends_with(\"_bp\")) |>\n  pivot_longer(ends_with(\"_bp\")) |>\n  mutate(name = factor(name, levels = c(\"bl_bp\", \"time1_bp\", \"time2_bp\")))\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}